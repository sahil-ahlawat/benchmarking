worker_processes auto;

events { 
    worker_connections 1024; 
}

http {
    lua_shared_dict prometheus_metrics 10M;
    lua_package_path "/usr/local/lib/lua/?.lua;;";

    init_by_lua_block {
        prometheus = require("prometheus").init("prometheus_metrics")
        metric_requests = prometheus:counter("nginx_http_requests_total", "Total HTTP requests", {"status"})
    }

    log_by_lua_block {
        local status = ngx.var.status
        metric_requests:inc(1, {status})
    }

    server {
        listen 80;
        root /var/www/html;
        index index.php index.html index.htm;
        server_name localhost;

        location / {
            try_files $uri $uri/ =404;
        }

        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        # Export metrics at /metrics
        location /metrics {
            content_by_lua_block {
                prometheus:collect()
            }
        }
    }
}
